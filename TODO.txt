- Clean up environment and scripts
	- make sure all URLs except CouchDB are relative - to support different context path
	- find out if it's possible to use python HTTP server for proxying - thus we could get rid of nginx for development
	- write single script which starts dev. servers under regular user
	- shutdown script for development environment
	- refine DB development script
	- switch between development and production databases
	- production config for nginx
- Write installation manual
- organize import/export links in more usable way
- Optimize DB queries (e.g. avoid emiting documents)
- Status tracking
- Offline mode support
- Configure DB location and store it in browser storage. This would need cross-domain scripting

- Sort expenses on the client-side
- Full keyboard support
- Lazy initialization of UI parts
- Improve imort from CSV
	- support preserving IDs upon import
	- think about transactionality

Low priority:
- Refactor DateFilterDialog: it should create a link and a dialog as a single component.
- Refactor all dialogs - make sure they are inherited from Dialog, not aggregate dialog object inside of them.
- Scripts for preprocessing DB logic that will allow to upload it without web-interface and write file as plain .js
- Date filter dialog: add ability to resize dialog

